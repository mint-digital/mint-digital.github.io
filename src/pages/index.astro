---
import Cards from "../components/Cards";
import Team from "../components/Team";
import Header from "../components/Header.astro";
import Footer from "../components/Footer";
import { fetchCards, fetchTeam, fetchHeader, fetchFooter } from "../utils/contentful";
import Top from "../layouts/Top.astro";
import NavBar from "../components/NavBar";

const cards = { 
	cards: await fetchCards() 
};

const team = { team: {
		textColor: "#efe9e0",
		backgroundColor: "#86ad9e",
		members:	await fetchTeam(),
	} 
};

const headProps = {
	videoNumber: 0,
	bright: 90,
	headProps: await fetchHeader(),
};
const footProps = { footProps: await fetchFooter() };

---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		<base href="." />
		<meta property="og:title" content="Vi är Mint" />
		<meta property="og:description" content="Den nya expertbyrån med hjärtat på rätta stället.
Vi rådger och hjälper företag att bli kundfokuserade" />
		<meta property="og:locale" content="sv_SE" />
		<meta property="og:type" content="website" />
		<meta property="og:url" content="https://www.mint.se" />
		<meta property="og:image" content="https://mint.se/img/ogp_crop2.jpeg" />
		<meta name="twitter:card" content="summary_large_image">
		<meta name="twitter:site" content="http://www.mint.se">
		<meta name="twitter:title" content="Vi är Mint">
		<meta name="twitter:description" content="Den nya expertbyrån med hjärtat på rätta stället.
Vi rådger och hjälper företag att bli kundfokuserade">
		<meta name="twitter:image" content="https://mint.se/img/ogp_crop2.jpeg">
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,400;0,700;0,900;1,400;1,700&display=swap"
			rel="stylesheet"
		/>
		<link rel="stylesheet" href="../css/Common.css" />
		<style>
			html,
			body {
				font-family: "Lato";
				margin: 0;
				padding: 0;
				height: 100svh;
				font-size: 16px;
				background-attachment: fixed;
				background-color: white;
				scroll-behavior: smooth;
			}
			@media (prefers-color-scheme: dark) {
				html,
				body {
					font-family: "Lato";
					margin: 0;
					padding: 0;
					height: 100svh;
					font-size: 16px;
					background-attachment: fixed;
					background-color: black;
					scroll-behavior: smooth;
				}
			}

			@media screen and (max-width: 1080px),
			screen and (max-height: 545px) {
				html,
				body {
					font-size: 10px;
				}
			}

			@media screen and (max-width: 680px),
			screen and (max-height: 345px) {
				html,
				body {
					font-size: 8px;
				}
			}
		</style>
		<!-- Matomo -->
		<script>
			var _paq = window._paq = window._paq || [];
			/* tracker methods like "setCustomDimension" should be called before "trackPageView" */
			_paq.push(['trackPageView']);
			_paq.push(['enableLinkTracking']);
			(function() {
				var u="https://mint.matomo.cloud/";
				_paq.push(['setTrackerUrl', u+'matomo.php']);
				_paq.push(['setSiteId', '1']);
				var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
				g.async=true; g.src='//cdn.matomo.cloud/mint.matomo.cloud/matomo.js'; s.parentNode.insertBefore(g,s);
			})();
		</script>
		<!-- End Matomo Code -->
	</head>
	<script>
		import * as basicScroll from 'basicscroll';
		const navbarAnim = basicScroll.create({
			elem: document.querySelector('.navbar'),
			from: '0',
			to: '500px',
			props: {
				'--opacity': {
					from: 0,
					to: 1
				},
				'--navHeight': {
					from: '8rem',
					to: '6rem'
				},
				'--navSize': {
					from: '6rem',
					to: '4rem'
				}
			}
		});
		navbarAnim.start();
		const burgerAnim = basicScroll.create({
			elem: document.querySelector('.burger'),
			from: '0',
			to: '500px',
			props: {
				'--rotate': {
					from: 0,
					to: 90
				},
			}
		});
		burgerAnim.start();
	</script>
	<body>
		<main>
			<Top >
				<NavBar slot="top_menu" client:only/>
				<Header slot="header" {...headProps} />
			</Top>
			<Cards {...cards} client:visible />
			<Team {...team} client:visible />
			<Footer {...footProps} client:visible />
		</main>
	</body>
</html>
